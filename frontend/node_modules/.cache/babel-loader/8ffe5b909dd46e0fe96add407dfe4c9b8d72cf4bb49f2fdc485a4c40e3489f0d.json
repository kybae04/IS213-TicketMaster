{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/IS213-TicketMaster/frontend/ticketmaster/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { getCurrentSession, getCurrentUser, signOut, signIn } from '../services/authService';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize authentication state\n  useEffect(() => {\n    async function init() {\n      try {\n        const session = await getCurrentSession();\n        if (session !== null && session !== void 0 && session.session) {\n          const userData = await getCurrentUser();\n          setUser(userData);\n        }\n      } catch (error) {\n        // Silent failure\n      } finally {\n        setLoading(false);\n      }\n\n      // Listen for auth changes with Supabase\n      const {\n        data: authListener\n      } = supabase.auth.onAuthStateChange(async (event, session) => {\n        if (event === 'SIGNED_IN' && session) {\n          const user = await getCurrentUser();\n          setUser(user);\n        } else if (event === 'SIGNED_OUT') {\n          setUser(null);\n        }\n      });\n\n      // Cleanup function\n      return () => {\n        if (authListener && authListener.subscription) {\n          authListener.subscription.unsubscribe();\n        }\n      };\n    }\n    init();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const data = await signIn(email, password);\n      if (data.user) {\n        setUser(data.user);\n        return data;\n      }\n      throw new Error('Login failed');\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      console.log(\"Starting logout process in AuthContext\");\n      const result = await signOut();\n      console.log(\"signOut result in AuthContext:\", result);\n      if (result) {\n        console.log(\"Setting user to null in AuthContext\");\n        setUser(null);\n        return true;\n      } else {\n        console.error(\"signOut returned unexpected result:\", result);\n        return false;\n      }\n    } catch (error) {\n      console.error(\"Error in AuthContext logout:\", error);\n      return false;\n    }\n  };\n\n  // Check current auth state - useful for debug page\n  const checkAuthState = async () => {\n    try {\n      const session = await getCurrentSession();\n      if (session !== null && session !== void 0 && session.session) {\n        const userData = await getCurrentUser();\n        setUser(userData);\n        return !!userData;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  // Make auth state available to consumers\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    checkAuthState\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 10\n  }, this);\n}\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","getCurrentSession","getCurrentUser","signOut","signIn","supabase","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","init","session","userData","error","data","authListener","auth","onAuthStateChange","event","subscription","unsubscribe","login","email","password","Error","logout","console","log","result","checkAuthState","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/IS213-TicketMaster/frontend/ticketmaster/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { getCurrentSession, getCurrentUser, signOut, signIn } from '../services/authService';\nimport supabase from '../supabaseClient';\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize authentication state\n  useEffect(() => {\n    async function init() {\n      try {\n        const session = await getCurrentSession();\n        if (session?.session) {\n          const userData = await getCurrentUser();\n          setUser(userData);\n        }\n      } catch (error) {\n        // Silent failure\n      } finally {\n        setLoading(false);\n      }\n      \n      // Listen for auth changes with Supabase\n      const { data: authListener } = supabase.auth.onAuthStateChange(\n        async (event, session) => {\n          if (event === 'SIGNED_IN' && session) {\n            const user = await getCurrentUser();\n            setUser(user);\n          } else if (event === 'SIGNED_OUT') {\n            setUser(null);\n          }\n        }\n      );\n\n      // Cleanup function\n      return () => {\n        if (authListener && authListener.subscription) {\n          authListener.subscription.unsubscribe();\n        }\n      };\n    }\n    \n    init();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const data = await signIn(email, password);\n      if (data.user) {\n        setUser(data.user);\n        return data;\n      }\n      throw new Error('Login failed');\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      console.log(\"Starting logout process in AuthContext\");\n      const result = await signOut();\n      console.log(\"signOut result in AuthContext:\", result);\n      \n      if (result) {\n        console.log(\"Setting user to null in AuthContext\");\n        setUser(null);\n        return true;\n      } else {\n        console.error(\"signOut returned unexpected result:\", result);\n        return false;\n      }\n    } catch (error) {\n      console.error(\"Error in AuthContext logout:\", error);\n      return false;\n    }\n  };\n  \n  // Check current auth state - useful for debug page\n  const checkAuthState = async () => {\n    try {\n      const session = await getCurrentSession();\n      if (session?.session) {\n        const userData = await getCurrentUser();\n        setUser(userData);\n        return !!userData;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  // Make auth state available to consumers\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    checkAuthState\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\n// Custom hook to use the auth context\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}