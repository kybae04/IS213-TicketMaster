{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/IS213-TicketMaster/frontend/ticketmaster/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  isAuthenticated,\n  children\n}) {\n  _s();\n  const location = useLocation();\n  if (!isAuthenticated) {\n    // Save the current location the user was trying to navigate to\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        returnTo: location.pathname\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If we have children, render them, otherwise render the Outlet for nested routes\n  return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 32\n  }, this);\n}\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","Outlet","jsxDEV","_jsxDEV","ProtectedRoute","isAuthenticated","children","_s","location","to","state","returnTo","pathname","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/IS213-TicketMaster/frontend/ticketmaster/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation, Outlet } from 'react-router-dom';\n\nfunction ProtectedRoute({ isAuthenticated, children }) {\n  const location = useLocation();\n  \n  if (!isAuthenticated) {\n    // Save the current location the user was trying to navigate to\n    return <Navigate to=\"/login\" state={{ returnTo: location.pathname }} replace />;\n  }\n\n  // If we have children, render them, otherwise render the Outlet for nested routes\n  return children ? children : <Outlet />;\n}\n\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,cAAcA,CAAC;EAAEC,eAAe;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACK,eAAe,EAAE;IACpB;IACA,oBAAOF,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAEH,QAAQ,CAACI;MAAS,CAAE;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjF;;EAEA;EACA,OAAOX,QAAQ,GAAGA,QAAQ,gBAAGH,OAAA,CAACF,MAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACV,EAAA,CAVQH,cAAc;EAAA,QACJJ,WAAW;AAAA;AAAAkB,EAAA,GADrBd,cAAc;AAYvB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}